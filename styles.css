/* adding some set colours variables for the website */
:root{
    --bg-colour: #f0f2f0;
    --main-colour: #ffd064;
    --text-colour: #4a3c4e;
    --light-accent: #7ca4b3;
    --dark-accent: #806157;
}

* {
    margin: 0;
    padding: 0;

    /* set everything to border-box styling */
    box-sizing: border-box;
}

html {
    
    /* 1 rem = 10px */
    font-size: 62.5%;
    font-family: "Roboto" "Helvetica";
    scroll-behavior: smooth;
    display: flex;
    flex-direction: column;
    background-color: var(--bg-colour);
    
    /* need this to offset nav links covering headers due to it being position fixed!! */
    scroll-padding-top: 5.5rem;
}

#nav-bar {
    display: flex;
    justify-content: flex-end;
    position: fixed;
    width: 100%;
    background-color: var(--main-colour);
    z-index: 2;
}

.nav-links {
    display: flex;
    list-style-type: none;
}

.nav-link {
    font-weight: bold;
    font-size: 2.2rem;
    color: white;
    display: block;
    margin: 2rem 1rem;
    padding: 0.3rem;
    text-decoration: none;
    border: solid transparent 0.5rem;
    transition: color 0.7s;
}


.nav-link:hover {
    color: var(--light-accent);
    border-bottom: solid var(--light-accent) 0.5rem;
}


#content-container {
        margin: 0 auto;
        margin-top: 10rem;
        width: 80%;
}

h1 {
    font-size: 2.2rem;
}

p {
    font-size: 1.8rem;
    line-height: 1.5;
}
.section-header {
    position: relative;
    left: 1.5rem;
    color: white;
    margin: 0;
    display: inline-block;
    background-color:var(--main-colour);
    border-radius: 0.5rem;
    padding: 0.5rem;
    z-index: 1;
}

.section-paragraph {
    transform: translateY(-1.9rem);
    border-radius: 0.5rem;
    padding: 3rem 2rem 2rem 2rem;
    z-index: -1;
    border:solid var(--text-colour) 0.2rem;
    color: var(--text-colour);

}

#progress-links ul {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    list-style-type: none;
    transform: translateY(-1.9rem);
    font-size: 1.6rem;
    border-radius: 0.5rem;
    padding: 3rem 2rem 2rem 2rem;
    z-index: -1;
    border:solid var(--text-colour) 0.2rem;
}

.progress-link {
    display: flex;
    align-items: center;
    font-size: 2rem;
    color: var(--text-colour);
    text-decoration: none;
}


.progress-link:hover {
    color: var(--light-accent);
    transform: translateY(5%);
}

.iconify {
    font-size: 5rem;
    margin-right: 1rem;
}

.carousel-container {
    max-width: 1000px;
    width: 100%;
    height: 500px;
    /* restricts user from highlighting the image carousel */
    user-select: none;
    border: solid var(--light-accent) 0.4rem;
    margin: 0 auto;
    margin-bottom: 2rem;
    border-radius: 0.5rem;
}

.images-container {
    width: 100%;
    height: 90%;
    /* hides rest of the images that are overflowing */
    overflow: hidden;
    position: relative;
}
.image-and-caption {
    /* display: hidden; */
    width: 100%;
    height: 100%;
    opacity: 0;
    position: absolute;
}
img {
    /* need to set to 100% otherwise all images will appear due to difference in sizes */
    width: 100%;
    height: 100%;
}

.caption-text {
    display: none;
}

.previous-button, .next-button {
    padding: 1.6rem 1.6rem 1.6rem 1rem;
    color: var(--main-colour);
    color: var(--light-accent);
    position: absolute;
    /* put buttons above images */
    z-index: 1;
    /* transition property is shorthand for property, duration, timing-function and delay, default values are all, 0s,ease,0s */
    transition: 0.5s ease;
    top: 50%;
    /* top counts the top edge of the element so to center the middle of the element,
     have to shift it up by 50% on itself to achieve true centering */
    transform: translateY(-50%);
    border-radius: 0px 10px 10px 0px;
    font-size: 3rem;
}

/* moving next button to the righthand side and changing padding to match*/
.next-button {
    right: 0;
    border-radius: 10px 0px 0px 10px;
    padding: 1.6rem 1rem 1.6rem 1.6rem;
}

/* hover effect on navigation buttons  */
.previous-button:hover, .next-button:hover {
    background-color: var(--main-colour);
    background-color: var(--light-accent);
    color: var(--main-colour);
    cursor: pointer;
    opacity: 0.7;

}

/* changing opacity of arrow icons  */
.fas {
    opacity: 0.7;
}
/* hovering the buttons will also increase opacity of the arrow icon */
.previous-button:hover .fas, .next-button .fas{
    opacity: 1;
}

.caption-container {
    position: absolute;
    z-index: 1;
    left: 50%;
    bottom: 0;
    transform: translateX(-50%);
    font-size: 1.6rem;
    width: 25%;
    /* dont set height to auto because the animation will cause height to change during animation */
    height: 2.5rem;
    line-height: 2.5rem;
    color: var(--text-colour);
    text-align: center;
    background-color: var(--bg-colour);
    opacity: 1;
    overflow: hidden;
    
}

/* placeholder is to display the caption text for each image, same way image holder displays image */
.caption-container .caption-text {
    margin: 0;
}

#play-pause-button {
    position: absolute;
    top: 0;
    font-size: 3rem;
    color: var(--light-accent);
    padding: 0.5rem 0.8rem 0.5rem 1rem;
    transition: ease 0.5s;
    z-index: 2;
    cursor: pointer;
    border-radius: 0rem 0rem 1rem 0rem;
   
}

#play-pause-button:hover {
    background-color: var(--light-accent);
    color: var(--main-colour);
    cursor: pointer;
    opacity: 0.7;
}

#play-pause-button:hover .fas {
    opacity: 1;
}

#dots-container {
    display: flex;
    justify-content: center;
    align-content: center;
    width: 100%;
    height: 10%;
    text-align: center;
    padding-top: 2rem;
    background: var(--light-accent);
}

.dots {
    width: 2rem;
    height: 2rem;
    /* border radius 50% to turn into circles */
    border-radius: 50%;
    /* space between the dots */
    margin: 0 0.5rem;
    cursor: pointer;
    /* have to use background color because the spam elements have no content in them so color wont color anything */
    background-color: var(--bg-colour);
    transition: 0.5s ease;
    transform: translateY(-25%);
}

.dots:hover, .dots.active {
    background-color: var(--main-colour); 
}

/* Creating a class for an animation to move current image to the left out of view */
.move-current-slide-left {
    animation-name: move-current-left;
    animation-duration: 0.5s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

/* Creating a class for an animation to move next image to the left into view */
.move-next-slide-left {
    animation-name: move-next-left;
    animation-duration: 0.5s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}



/* after naming the animation, the keyframes is governs the animation details 
for moving current slide to the left. CANT USE DISPLAY PROPERTY FOR ANIMATIONS!! Have to use opacity or height 0 for this method */
@keyframes move-current-left {
    from{
        margin-left: 0;
        opacity: 1;
    }
    to{
        margin-left: -100%;
        opacity: 1;
    }
}

@keyframes move-next-left {
    from{
        margin-left: 100%;
        opacity: 1;
    }
    to{
        margin-left: 0;
        opacity: 1;
    }
}

/* Creating a class for an animation to move current image to the right out of view */
.move-current-slide-right {
    animation-name: move-current-right;
    animation-duration: 0.5s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

/* Creating a class for an animation to move next image to the right into view */
.move-next-slide-right {
    animation-name: move-next-right;
    animation-duration: 0.5s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

@keyframes move-current-right {
    from{
        margin-left: 0;
        opacity: 1;
    }
    to{
        margin-left: 100%;
        opacity: 1;
    }
}

@keyframes move-next-right {
    from{
        margin-left: -100%;
        opacity: 1;
    }
    to{
        margin-left: 0;
        opacity: 1;
    }
}

/* Creating classes for animations for caption text */
.slide-caption-from-bottom {
    animation-name: slide-from-bottom;
    animation-duration: 0.5s;
}

.slide-caption-from-top {
    animation-name: slide-from-top;
    animation-duration: 0.5s;
}

@keyframes slide-from-bottom {
    from{
        opacity: 0;
        margin-top: 100%;
    }
    to{
        opacity: 1;
        margin-top: 0%;
    }
}

@keyframes slide-from-top {
    from{
        opacity: 0;
        margin-top: -100%;
    }
    to{
        opacity: 1;
        margin-top: 0%;
    }
}

/* flame test stlying  */
#flame-test {
    margin: 0 auto;
    width: 60%;
    display: flex;
    border: solid var(--text-colour) 0.2rem;
    padding: 1rem;
    border-radius: 0.5rem;
    color: var(--text-colour);
}

#elements-list {
    width: 30%;

}

.element{
    font-size: 1.1rem;
    line-height: 2.8rem;
    text-align: center;
    width: 3rem;
    height: 3rem;
    border-radius: 25%;
    color: black;
}

.copper {
    background-color: #b87333;
}

.potassium, .lithium, .sodium {
   background-color: #C0C0C0;
 
}

#bunsen-burner-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    width:70%;
}

#bunsen-burner {
max-width: 10rem;
max-height: 10rem;
}

.above-flame-box {
    width: 3.2rem;
    height: 3.2rem;
    background-color: white;
    border: solid var(--light-accent) 1px;
    transform: translateX(-12%);
}
#bunsen-burner-container h2 {
    margin-bottom: 1rem;
}

.drag-hover-above-flame {
border-style: dashed;
}

.after-drag {
    border-radius: 50%;
}

.burn-away {
    animation-name: burn-away-animation;
    animation-duration: 2s;
    animation-fill-mode: forwards;
    animation-delay: 0.3s;
}

@keyframes burn-away-animation {
    from{
        opacity: 1;
    }
    to{
        opacity: 0;
    }
}

/* start of media queries */
/* tablet screen sizes */
@media only screen and (max-width: 768px) {

    #progress-links ul {
     display: flex;
     flex-direction: column;
        }

    #progress-links {
        width:50%;
        margin: 0 auto;
    }
    
    .progress-link {
        padding-bottom: 1rem;
    }
    
    #content-container {
        margin-top: 6rem;
        width: auto;
    }
    
    
    #flame-test {
        display: none;
    }
        
    /* creating hamburger navbar icon */
    .line {
        width: 3rem;
        height: 0.3rem;
        background: var(--light-accent);
        margin: 0.5rem;
    }

    .hamburger {
        margin: 1rem;
        z-index: 2;
        cursor: pointer;
    }

    /* styling for responsive navbar */
    .nav-links {
        position: fixed;
        /* 100vh to cover whole screen of device */
        height: 100vh;
        width: 100%;
        background-color: var(--main-colour);
        flex-direction: column;
        align-items: center;
        /* display: none; */

        /* using clip path to create a mask for animation, 
        setting the circle to be top right outside of screen */
        clip-path: circle(10rem at 90% -10%);

        /* use webkit for better clip-path support on more browsers */
        -webkit-clip-path: circle(10rem at 90% -10%);
        transition: all 1s ease-out;

        /* stop pointer events so users cant accidently click stuff behind navbar */
        pointer-events: none;
    }

    /* targetting nav-links class elements that contain .open class */
    .nav-links.open {
        /* size of circle mask to fill whole screen */
        clip-path: circle(200rem at 90% -10%);
        -webkit-clip-path: circle(200rem at 90% -10%);
        pointer-events: all;
    }

    /* creating fade in animations for navbar links
    using nth-child selector to target each link anchor separately */

    .nav-links li {
        opacity: 0;
    }


    .nav-links li:nth-child(1) {
        transition: all 0.5s ease 0.2s;
    }

    .nav-links li:nth-child(2) {
        transition: all 0.5s ease 0.4s;
    }

    .nav-links li:nth-child(3) {
        transition: all 0.5s ease 0.6s;
    }

    .nav-links li:nth-child(4) {
        transition: all 0.5s ease 0.8s;
    }

    .nav-links li:nth-child(5) {
        transition: all 0.5s ease 1s;
    }

    .nav-links li.opacity-one {
        opacity: 1;
    }

    .nav-link {
        font-size: 3.3rem;
    }

    /* make navbar only take up hamburger icon size 
    so it doesnt cover headers when links are used */
    #nav-bar {
        width: 100%;
        right: 0;
    }
}
    
    /* smartphone screen sizes */
@media only screen and (max-width: 480px) {

}

    /* end of media queries */

